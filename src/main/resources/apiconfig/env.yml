# 环境配置文件
# 支持多环境配置

common:
  # 通用配置
  encoding: UTF-8
  timeout: 30000
  retryCount: 3
  
  # 日志配置
  logging:
    level: INFO
    file: logs/test.log
    maxFileSize: 10MB
    maxFiles: 5
  
  # 报告配置
  report:
    format: allure
    outputDir: reports
    
  # 临时目录
  temp:
    directory: target/temp
    cleanup: true

# 开发环境
dev:
  baseUrl: http://localhost:8080
  
  # TokenProvider配置
  UCAppKey: ${UC_APP_KEY:your_app_key}
  UCAppSecret: ${UC_APP_SECRET:your_app_secret}
  tokenUrl: ${TOKEN_URL:http://localhost:8080/api/v1/auth/token}
  
  # 认证配置
  auth:
    type: basic
    username: admin
    password: admin123
    
  # 数据库配置
  database:
    url: jdbc:mysql://localhost:3306/test_db
    username: root
    password: root
    driver: com.mysql.cj.jdbc.Driver
    
  # 存储配置
  storage:
    type: local
    path: target/storage
    
  # 测试用户
  test:
    username: test_user
    password: test_pass
    
  # 环境变量映射
  mappings:
    test_user_id: "${TEST_USER_ID:12345}"
    test_workspace_id: "${TEST_WORKSPACE_ID:67890}"
    test_folder_id: "${TEST_FOLDER_ID:11111}"

# 测试环境
test:
  baseUrl: https://test-api.example.com
  
  # TokenProvider配置
  UCAppKey: ${UC_APP_KEY}
  UCAppSecret: ${UC_APP_SECRET}
  tokenUrl: ${TOKEN_URL:https://test-api.example.com/api/v1/auth/token}
  
  auth:
    type: bearer
    token: ${TEST_TOKEN}
    
  database:
    url: jdbc:postgresql://test-db.example.com:5432/test_db
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver: org.postgresql.Driver
    
  storage:
    type: s3
    bucket: test-bucket
    region: us-east-1
    
  test:
    username: ${TEST_USERNAME}
    password: ${TEST_PASSWORD}
    
  mappings:
    test_user_id: "${TEST_USER_ID}"
    test_workspace_id: "${TEST_WORKSPACE_ID}"
    test_folder_id: "${TEST_FOLDER_ID}"

# 生产环境
prod:
  baseUrl: https://api.example.com
  
  # TokenProvider配置
  UCAppKey: ${UC_APP_KEY}
  UCAppSecret: ${UC_APP_SECRET}
  tokenUrl: ${TOKEN_URL:https://api.example.com/api/v1/auth/token}
  
  auth:
    type: oauth2
    clientId: ${PROD_CLIENT_ID}
    clientSecret: ${PROD_CLIENT_SECRET}
    
  database:
    url: jdbc:postgresql://prod-db.example.com:5432/prod_db
    username: ${PROD_DB_USERNAME}
    password: ${PROD_DB_PASSWORD}
    driver: org.postgresql.Driver
    
  storage:
    type: s3
    bucket: prod-bucket
    region: us-east-1
    
  test:
    username: ${PROD_TEST_USERNAME}
    password: ${PROD_TEST_PASSWORD}
    
  mappings:
    test_user_id: "${PROD_TEST_USER_ID}"
    test_workspace_id: "${PROD_TEST_WORKSPACE_ID}"
    test_folder_id: "${PROD_TEST_FOLDER_ID}"

# 本地环境
local:
  baseUrl: http://localhost:8080
  
  # TokenProvider配置
  UCAppKey: ${UC_APP_KEY:local_app_key}
  UCAppSecret: ${UC_APP_SECRET:local_app_secret}
  tokenUrl: ${TOKEN_URL:http://localhost:8080/api/v1/auth/token}
  
  auth:
    type: basic
    username: local_user
    password: local_pass
    
  database:
    url: jdbc:h2:mem:testdb
    username: sa
    password: 
    driver: org.h2.Driver
    
  storage:
    type: local
    path: target/local-storage
    
  test:
    username: local_test
    password: local_test_pass
    
  mappings:
    test_user_id: "99999"
    test_workspace_id: "88888"
    test_folder_id: "77777"